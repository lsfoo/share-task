/**
 * 网关
 */
application {
  config {
    baseName gateway,
    packageName com.lsfoo.app.gateway,
    applicationType gateway,
    authenticationType jwt,
    serviceDiscoveryType eureka,
    enableTranslation false,
  }
  //entities * except Task, Job
}

/**
 * 朋友圈任务服务
 */
application {
  config {
    baseName momentstask,
    packageName com.lsfoo.app.momentstask,
    applicationType microservice,
    authenticationType jwt,
    searchEngine elasticsearch,
    serverPort 8081,
    serviceDiscoveryType eureka,
    skipUserManagement true,
    skipClient true,
  }
  entities MomentsTask, MomentsJob
}

/**
 * 用户 
 */
application {
  config {
    baseName userinfo,
    packageName com.lsfoo.app.userinfo,
    applicationType microservice,
    authenticationType jwt,
    searchEngine elasticsearch,
    serverPort 8083,
    serviceDiscoveryType eureka,
    skipUserManagement true,
    skipClient true,
  }
  entities * except MomentsJob, MomentsTask 
}

/**
 * 朋友圈任务.
 * @author lsfoo 
 */
entity MomentsTask   {
  /** 标题 */
  title String

  /** 朋友圈存在的时长 */
  duration Integer

  /** 集赞数量 */
  laudQuantity Integer

  /** 工作数量 */
  jobQuantity Integer

  /** 任务开始时间 */
  startDate ZonedDateTime

  /** 任务结束时间 */
  endDate ZonedDateTime

  /** 转发文字 */
  forwardText String

  /** 转发图片 */
  forwardImgs String

  /** 奖励类型 */
  rewardType RewardType

  /** 奖品描述 */
  giftDescription String

  /** 奖品图片 */
  giftImgs String

  /** 领取地址 */
  pickupAddress String

  /** 佣金 */
  commission Float

  /** 审核状态 */
  approvalStatus ApprovalStatus

  /** 用户ID */
  userId Integer
}
/** 奖励类型 */
enum RewardType {
  GIFT, COMMISSION
}
/** 审核状态 */
enum ApprovalStatus {
  APPROVED, REJECT
}
/**
 * 工作.
 */
entity MomentsJob {
  /** 审核状态 */
  approvalStatus ApprovalStatus

  /** 任务开始截图 */
  startScreenCapture String

  /** 任务完成截图 */
  endScreenCapture String

  /** 用户ID */
  userId Integer
}
/**
 * The Entity entity.
 * @author A true hipster
 */
entity UserInfo {
  /** 昵称 */
  nickName String

  /** 头像 */
  avater String

  /** 手机号 */
  phoneNumber String
  userId Integer
}
/**
 * Many to one relationship.
 */
relationship ManyToOne {
  MomentsJob{task(title)} to MomentsTask
}
dto * with mapstruct
service * with serviceClass
paginate * with infinite-scroll
