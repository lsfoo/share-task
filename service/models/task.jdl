/**
 * The application configuration.
 * @author A true hipster
 */
application {
  config {
    baseName myGateway

    packageName com.lsfoo.dev.myGateway
    applicationType gateway
    serverPort 8080
  }
}

application {
  config {
    baseName Task 
    packageName com.lsfoo.dev.task
    applicationType microservice
    searchEngine elasticsearch
    enableSwaggerCodegen true
    languages [en, zh-cn]
    nativeLanguage zh-cn
  }
  entities  Task, Category
}

application {
  config {
    baseName Job 
    packageName com.lsfoo.dev.job
    applicationType microservice
    searchEngine elasticsearch
    enableSwaggerCodegen true
    languages [en, zh-cn]
    nativeLanguage zh-cn
  }
  entities  Task, Category, Job
}



/**
 * 任务
 * @author lsfoo
 */
entity Task {
  /** taskTitle */
  title String required
  description String
  startDate ZonedDateTime required
  endDate ZonedDateTime required
  /** 可接取数量 */
  quantity Integer required
  status TaskStatus
}
enum TaskStatus {
  WATTING, PROCESSING, DONE, CLOSED
}
/**
 * 任务工作 
 * @author lsfoo
 */
entity Job {
  /** jobTitle */
  title String
}
/**
 * 任务分类
 * @author lsfoo
 */
entity Category{
  /** 描述 */
  description String
  /** 排序 */
  sortOrder Integer
  status CategoryStatus
}
/**
 * 任务标签
 * @author lsfoo
 */
entity Tag{
  name String required
}
/**
 * 用户信息 
 * @author lsfoo
 */
entity Person{
  nickName String 
  balance BigDecimal
  phone String
  email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
}
relationship OneToOne {
  Person{user(login) required} to User
}
enum CategoryStatus {
  AVAILABLE, DISABLED
}
/**
 * Many to one relationship.
 */
relationship ManyToOne {
  Job{task(title)} to Task{job}
  Job{Person(nickName)} to Person{job}
  Task{category(description)} to Category{task}
  Task{Person(nickName)} to Person{task}
}
relationship ManyToMany{
  Tag{task(title)} to Task{tag(name)}
}
/**
 * One to one relationship.
 */
search * with elasticsearch
//dto * with mapstruct
//service * with serviceClass
//service * with serviceImpl
//paginate * with pager
paginate * with infinite-scroll
search * with elasticsearch
